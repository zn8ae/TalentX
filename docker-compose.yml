models:
    image: tp33/django
    external_links:
      -  mysql:db
    volumes:
      - ./models/:/app
    # ports:
    #   - "8001:8000"
    command: bash -c "pip install selenium && python manage.py makemigrations && python manage.py migrate && python manage.py loaddata db.json && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./models/wsgi.py"

exp:
    image: tp33/django
    links:
      -  models:models-api
      -  kafka
      -  es
    volumes:
      - ./exp/:/app
    # ports:
    #   - "8002:8000"
    command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./exp/wsgi.py"

web:
    image: tp33/django
    links:
      -  exp:exp-api
    volumes:
      - ./web/:/app
    ports:
      - "8003:8000"
    #command: bash -c "pip install requests && mod_wsgi-express start-server --reload-on-changes ./web/wsgi.py"
    command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./web/wsgi.py"

# web2:
#     image: tp33/django
#     links:
#       -  exp:exp-api
#     volumes:
#       - ./web/:/app
#     ports:
#       - "8004:8000"
#     #command: bash -c "pip install requests && mod_wsgi-express start-server --reload-on-changes ./web/wsgi.py"
#     command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./web/wsgi.py"

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
    image: tp33/django
    container_name: batch
    links:
       - kafka:kafka
       - es:es
    volumes:
       - ./batch:/app/batch
       - ./data:/app/data
    command: bash -c "python /app/batch/main.py"

batch2:
    image: tp33/django
    container_name: batch2
    links:
      - kafka:kafka
    volumes:
      - ./data:/app/data
    command: bash -c "python /app/data/access.py"

# selenium:
#     image: selenium/standalone-firefox:3.3.1-cesium
#     #image: selenium/standalone-chrome
#     container_name: selenium
#     ports:
#         - "4444:4444"
#     volumes:
#         - ./selenium:/dev/shm

# haproxy:
#     image: haproxy
#     container_name: my-running-haproxy
#     volumes:
#       - ./:/usr/local/etc/haproxy
#     ports:
#       - "8080:80"
      
# spark-master:
#   image: gettyimages/spark
# #  command: bash -c "apt-get update && apt-get install python3-dev libmysqlclient-dev -y && apt-get install python-pip -y && pip install mysqlclient && apt-get install python-mysqldb && bin/spark-class org.apache.spark.deploy.master.Master -h spark-master"
#   command: bash -c "bash /tmp/data/script.sh && bin/spark-class org.apache.spark.deploy.master.Master -h spark-master"
#   external_links:
#     - mysql:db
#   container_name: spark-master
#   hostname: spark-master
#   environment:
#     MASTER: spark://spark-master:7077
#     SPARK_CONF_DIR: /conf
#   expose:
#     - 7001
#     - 7002
#     - 7003
#     - 7004
#     - 7005
#     - 7006
#     - 7077
#     - 6066
#   ports:
#     - 4040:4040
#     - 6066:6066
#     - 7077:7077
#     - 8080:8080
#   volumes:
#     - ./data:/tmp/data

# spark-worker:
#   image: gettyimages/spark
#  # command: bash -c "apt-get update && apt-get install python3-dev libmysqlclient-dev -y && apt-get install python-pip -y && pip install mysqlclient && apt-get install python-mysqldb && bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
#   command: bash -c "bash /tmp/data/script.sh && bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077" 
#   external_links:
#     - mysql:db
#   container_name: spark-worker
#   hostname: spark-worker
#   environment:
#     SPARK_CONF_DIR: /conf
#     SPARK_WORKER_CORES: 2
#     SPARK_WORKER_MEMORY: 512m
#     SPARK_WORKER_PORT: 8881
#     SPARK_WORKER_WEBUI_PORT: 8081
#   links:
#     - spark-master
#   expose:
#     - 7012
#     - 7013
#     - 7014
#     - 7015
#     - 7016
#     - 8881
#   ports:
#     - 8081:8081
#   volumes:
#     - ./data:/tmp/data