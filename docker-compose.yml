models:
    image: tp33/django
    external_links:
      -  mysql:db
    volumes:
      - ./models/:/app
    # ports:
    #   - "8001:8000"
    command: bash -c "pip install selenium && python manage.py makemigrations && python manage.py migrate && python manage.py loaddata db.json && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./models/wsgi.py"

exp:
    image: tp33/django
    links:
      -  models:models-api
      -  kafka
      -  es
    volumes:
      - ./exp/:/app
    # ports:
    #   - "8002:8000"
    command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./exp/wsgi.py"

web:
    image: tp33/django
    links:
      -  exp:exp-api
    volumes:
      - ./web/:/app
    ports:
      - "8003:8000"
    #command: bash -c "pip install requests && mod_wsgi-express start-server --reload-on-changes ./web/wsgi.py"
    command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./web/wsgi.py"

web2:
    image: tp33/django
    links:
      -  exp:exp-api
    volumes:
      - ./web/:/app
    ports:
      - "8004:8000"
    #command: bash -c "pip install requests && mod_wsgi-express start-server --reload-on-changes ./web/wsgi.py"
    command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./web/wsgi.py"

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
    image: tp33/django
    container_name: batch
    links:
       - kafka:kafka
       - es:es
    volumes:
       - ./batch:/app/batch
    command: bash -c "python /app/batch/main.py"

selenium:
    image: selenium/standalone-firefox:3.3.1-cesium
    #image: selenium/standalone-chrome
    container_name: selenium
    ports:
        - "4444:4444"
    volumes:
        - ./selenium:/dev/shm

haproxy:
    image: haproxy
    container_name: my-running-haproxy
    volumes:
      - ./:/usr/local/etc/haproxy
    ports:
      - "8080:80"